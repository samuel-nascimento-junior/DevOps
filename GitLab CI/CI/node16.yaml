stages:
  - build
  - test

build:
  stage: build
  image: node:16.16-alpine3.16
  before_script:
    - npm config set registry http://registry/npm
  script:
    - npm install
    - npm run build
  artifacts:
    paths:
      - node_modules
      - dist

unit-test:
  stage: test
  image: node:16.16-alpine3.16
  needs:
    - build
  allow_failure: true
  before_script:
    - npm config set registry http://registry/npm
    - npm install
  script:
    - npm run test
  artifacts:
    paths:
      - coverage

sonarqube:
  stage: test
  image: sonarsource/sonar-scanner-cli:4
  allow_failure: true
  script:
    - npm run test
    - sonar-scanner
      -Dsonar.source=src
      -Dsonar.tests=src
      -Dsonar.javascript.lcov.reportPaths=coverage/lcov.info
      -Dsonar.test.inclusions=src/**/*.spec.js,src/**/*.spec.jsx,src/**/*.test.jsx
      -Dsonar.testExecutionReportPaths=coverage/test-reporter.xml
      -Dsonar.coverage.exclusions=**__init__**,tests/**,config.py,manage.py
      -Dsonar.exclusions=*.xml
      -Dsonar.gitlab.commit_sha=$CI_COMMIT_SHA
      -Dsonar.gitlab.project_id=$CI_PROJECT_ID
      -Dsonar.gitlab.ref_name=$CI_COMMIT_REF_NAME
      -Dsonar.gitlab.url=$CI_PROJECT_URL
      -Dsonar.host.url=$SONAR_HOST_URL
      -Dsonar.login=$SONAR_TOKEN
      -Dsonar.projectKey=${CI_PROJECT_NAME}-${CI_COMMIT_BRANCH}
      -Dsonar.projectName=${CI_PROJECT_NAME}
      -Dsonar.sources=.
      -Dsonar.branch.name=$CI_COMMIT_BRANCH
  cache:
    key: ${CI_JOB_NAME}
    paths:
      - .sonar/cache